.\" Manpage for renvsubst
.TH RENVSUBST 1 "15 March 2023"
.SH NAME
renvsubst \- Replace environment variables in the input text

.SH SYNOPSIS
.B renvsubst
[FLAGS] [FILTERS] [INPUT] | -h | --help | --version

.SH DESCRIPTION
.B renvsubst
replaces all (bash-like) environment variables in the input text with their corresponding values from the environment or with default values, if provided. It supports the following variable formats: $VAR_NAME, ${VAR_NAME}, and ${VAR_NAME:-DEFAULT_VALUE}. Invalid variables remain unchanged. A valid variable name starts with a letter or underscore, followed by any combination of letters, numbers, or underscores.

.SH General
.TP
.B -h, --help
Show the help text.
.TP
.B --version
Show the program version.

.SH FLAGS
.TP
.B --fail-on-unset
Fail if an environment variable is not set.
.TP
.B --fail-on-empty
Fail if an environment variable is empty.
.TP
.B --fail
Alias for --fail-on-unset and --fail-on-empty.
.TP
.B --no-replace-unset
Do not replace variables that are not set in the environment.
.TP
.B --no-replace-empty
Do not replace variables that are set but empty in the environment.
.TP
.B --no-replace
Alias for --no-replace-unset and --no-replace-empty.
.TP
.B --no-escape
Disables escaping of variables with two dollar signs ($$).

.SH FILTERS
.TP
.B -p, --prefix[=PREFIX]...
Only replace variables with the specified prefix. Prefixes can be specified multiple times.
.TP
.B -s, --suffix[=SUFFIX]...
Only replace variables with the specified suffix. Suffixes can be specified multiple times.
.TP
.B -v, --variable[=VARIABLE]...
Specify the variables to replace. If not provided, all variables will be replaced. Variables can be specified multiple times.

.SH INPUT
The input can be passed via stdin. If no input is provided, the program will wait for input from the user.

.SH ESCAPING
To retain a variable's original value and prevent it from being substituted by an environment variable, add a second dollar sign ($). The second dollar sign will be removed during substitution. Only valid variables must be escaped.

.SH EXAMPLES

.TP
.B Preparation

.TP
Create a test variable:

.nf
INPUT="""This is a "\$FILE_NAME" file.
It has more than "\${AMOUNT}" different variables.
You can also use "\${UNSET_VARIABLE:-default}" values inside variables like "\${UNSET_VARIABLE:-default}".
Here are more variable like "\${PREFIXED_VARIABLE_1}" and "\${VARIABLE_1_SUFFIXED}".
Here are more "\$PREFIXED_VARIABLE_2" and "\$VARIABLE_2_SUFFIXED" variables!
Here are other prefixed "\$prefixed_VARIABLE_3" and suffixed "\$VARIABLE_3_suffixed" variables!
Or you can escape Text with two dollar signs (\$\$) like fi\$\$h => fi\$h.
"""
.fi

.TP
Create a test file:

.nf
cat << EOF > input.txt
This is a "\$FILE_NAME" file.
It has more than "\${AMOUNT}" different variables.
You can also use "\${UNSET_VARIABLE:-default}" values inside variables like "\${UNSET_VARIABLE:-default}".
Here are more variable like "\${PREFIXED_VARIABLE_1}" and "\${VARIABLE_1_SUFFIXED}".
Here are more "\$PREFIXED_VARIABLE_2" and "\$VARIABLE_2_SUFFIXED" variables!
Here are other prefixed "\$prefixed_VARIABLE_3" and suffixed "\$VARIABLE_3_suffixed" variables!
Or you can escape Text with two dollar signs (\$\$) like fi\$\$h => fi\$h.
EOF
.fi

.TP
Set variables:

.nf
export FILE_NAME=input.txt
export AMOUNT=1
export PREFIXED_VARIABLE_1="variable with a prefix"
export PREFIXED_VARIABLE_2="another variable with a prefix"
export prefixed_VARIABLE_3="small letters prefix"
export VARIABLE_1_SUFFIXED="variable with a suffix"
export VARIABLE_2_SUFFIXED="another variable with a suffix"
export VARIABLE_3_suffixed="small letters suffix"
.fi

.TP
.B Commands

.TP
.B default usage

Replace all variables inside `input.txt` and output the result to `output.txt`:

.nf
renvsubst < input.txt > output.txt

# output.txt:
This is a "test.txt" file.
It has more than "1" different variables.
You can also use "default" values inside variables like "default".
Here are more variable like "variable with a prefix" and "variable with a suffix".
Here are more "another variable with a prefix" and "another variable with a suffix" variables!
Here are other prefixed "small letters prefix" and suffixed "small letters suffix" variables!
Or you can escape Text with two dollar signs ($$) like fi$h => fi.
.fi

.TP
.B filter variables

Replace only variable `AMOUNT` and `UNSET_VARIABLE` inside `input.txt` and output to `stdout`:

.nf
renvsubst -v=AMOUNT --variable UNSET_VARIABLE < input.txt

# stdout:
This is a "$FILE_NAME" file.
It has more than "1" different variables.
You can also use "default" values inside variables like "default".
Here are more variable like "${PREFIXED_VARIABLE_1}" and "${VARIABLE_1_SUFFIXED}".
Here are more "$PREFIXED_VARIABLE_2" and "$VARIABLE_2_SUFFIXED" variables!
Here are other prefixed "$prefixed_VARIABLE_3" and suffixed "$VARIABLE_3_suffixed" variables!
Or you can escape Text with two dollar signs ($$) like fi$h => fi$h.
.fi


.TP
.B filter with prefix

Replace only variables with the prefix `PREFIXED` from the variable `INPUT` and write the output to the file `output.txt`:

.nf
renvsubst --prefix PREFIXED <<< $INPUT > output.txt

# output.txt:
This is a "$FILE_NAME" file.
It has more than "${AMOUNT}" different variables.
You can also use "${UNSET_VARIABLE:-default}" values inside variables like "${UNSET_VARIABLE:-default}".
Here are more variable like "variable with a prefix" and "${VARIABLE_1_SUFFIXED}".
Here are more "another variable with a prefix" and "$VARIABLE_2_SUFFIXED" variables!
Here are other prefixed "$prefixed_VARIABLE_3" and suffixed "$VARIABLE_3_suffixed" variables!
Or you can escape Text with two dollar signs ($$) like fi$h => fi$h.
.fi

.TP
.B filter with suffix

Replace only variables with the suffix `SUFFIXED` inside `input.txt` and write the output to the file `output.txt`:

.nf
renvsubst --suffix=SUFFIXED < input.txt > output.txt

# output.txt:
This is a "$FILE_NAME" file.
It has more than "${AMOUNT}" different variables.
You can also use "${UNSET_VARIABLE:-default}" values inside variables like "${UNSET_VARIABLE:-default}".
Here are more variable like "${PREFIXED_VARIABLE_1}" and "variable with a suffix".
Here are more "$PREFIXED_VARIABLE_2" and "another variable with a suffix" variables!
Here are other prefixed "$prefixed_VARIABLE_3" and suffixed "$VARIABLE_3_suffixed" variables!
Or you can escape Text with two dollar signs ($$) like fi$h => fi$h.
.fi

.TP
.B multiple filter

Replace only variables with the prefixes `PREFIXED` or `prefixed` or suffix `SUFFIXED` from the variable `INPUT` and output to `stdout`:

.nf
renvsubst --prefix PREFIXED --prefix=prefixed --suffix=SUFFIXED <<< $INPUT

# stdout:
This is a "$FILE_NAME" file.
It has more than "${AMOUNT}" different variables.
You can also use "${UNSET_VARIABLE:-default}" values inside variables like "$${UNSET_VARIABLE:-default}".
Here are more variable like "variable with a prefix" and "variable with a suffix".
Here are more "another variable with a prefix" and "another variable with a suffix" variables!
Here are other prefixed "" and suffixed "$VARIABLE_3_suffixed" variables!
.fi
